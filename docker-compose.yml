version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: signature-crm-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: signature_crm
      POSTGRES_USER: crm_user
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./logs:/var/log/postgresql
    networks:
      - crm-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U crm_user -d signature_crm"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: signature-crm-backend
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      NODE_ENV: production
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: signature_crm
      DB_USER: crm_user
      DB_PASSWORD: ${DB_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      CORS_ORIGIN: ${CORS_ORIGIN}
      PORT: 3001
    volumes:
      - ./server/logs:/app/logs
      - ./server/uploads:/app/uploads
      - ./.env:/app/.env
    networks:
      - crm-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: signature-crm-frontend
    restart: unless-stopped
    depends_on:
      - backend
    environment:
      REACT_APP_API_URL: ${REACT_APP_API_URL}
      REACT_APP_ENVIRONMENT: production
    volumes:
      - frontend_build:/app/build
    networks:
      - crm-network

  nginx:
    image: nginx:alpine
    container_name: signature-crm-nginx
    restart: unless-stopped
    depends_on:
      - backend
      - frontend
    ports:
      # HTTP access will be on port 30080
      - "30080:80"
      # HTTPS access will be on port 30443 (if you set up SSL)
      - "30443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - ./logs:/var/log/nginx
      - frontend_build:/usr/share/nginx/html:ro
    networks:
      - crm-network

volumes:
  postgres_data:
    driver: local
  frontend_build:
    driver: local

networks:
  crm-network:
    driver: bridge
